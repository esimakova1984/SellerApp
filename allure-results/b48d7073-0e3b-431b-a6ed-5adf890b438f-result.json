{"name": "Add product and check", "status": "failed", "statusDetails": {"message": "AssertionError: Product with SKU None not found in store\nassert None is not None", "trace": "self = <test_add_product_API.TestAddProductE2E object at 0x1099a7640>, login = <pages.login_page.LoginPage object at 0x109b443a0>\n\n    @allure.title(\"Add product and check\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.smoke\n    def test_add_product_e2e(self, login):\n        with allure.step(\"Open inventory page\"):\n            self.inventory_page.is_opened()\n    \n        with allure.step(\"Open add product page\"):\n            self.add_product_page.open_add_page()\n    \n        with allure.step(\"Enter barcode and select product\"):\n            expected_sku = self.add_product_page.enter_barcode_autocomplete(6912301014638)\n            self.add_product_page.select_product_autocomplete()\n    \n        with allure.step(\"Wait for API response\"):\n            # Увеличьте время ожидания для обновления данных\n            time.sleep(10)\n    \n        with allure.step(\"Get product name\"):\n            product_name = self.add_product_page.get_name()\n            allure.attach(product_name, name=\"Product Name\", attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Check if product is added to store\"):\n            product = self.api.get_product_by_sku(expected_sku)\n            if product is None:\n                allure.attach(f\"Product with SKU {expected_sku} not found in store\", name=\"Product Not Found\", attachment_type=allure.attachment_type.TEXT)\n            else:\n                allure.attach(str(product.get('id')), name=\"Product ID\", attachment_type=allure.attachment_type.TEXT)\n>           assert product is not None, f\"Product with SKU {expected_sku} not found in store\"\nE           AssertionError: Product with SKU None not found in store\nE           assert None is not None\n\ntests/e2e_tests/test_add_product_API.py:40: AssertionError"}, "steps": [{"name": "Open inventory page", "status": "passed", "steps": [{"name": "Page https://seller-app-stg.web.app/40/inventory is opened", "status": "passed", "start": 1718454892378, "stop": 1718454892383}], "start": 1718454892378, "stop": 1718454892383}, {"name": "Open add product page", "status": "passed", "steps": [{"name": "Open  add page", "status": "passed", "start": 1718454892383, "stop": 1718454892632}], "start": 1718454892383, "stop": 1718454892632}, {"name": "Enter barcode and select product", "status": "passed", "steps": [{"name": "Enter barcode autocomplete", "status": "passed", "parameters": [{"name": "barcode", "value": "6912301014638"}], "start": 1718454892632, "stop": 1718454892720}, {"name": "Select product from product list autocomplete", "status": "passed", "start": 1718454892720, "stop": 1718454894799}], "start": 1718454892632, "stop": 1718454894799}, {"name": "Wait for API response", "status": "passed", "start": 1718454894799, "stop": 1718454904804}, {"name": "Get product name", "status": "passed", "steps": [{"name": "Get name from name field", "status": "passed", "start": 1718454904805, "stop": 1718454904835}], "attachments": [{"name": "Product Name", "source": "9bf4c26d-1f25-4796-b626-c894ded580f2-attachment.txt", "type": "text/plain"}], "start": 1718454904805, "stop": 1718454904837}, {"name": "Check if product is added to store", "status": "failed", "statusDetails": {"message": "AssertionError: Product with SKU None not found in store\nassert None is not None\n", "trace": "  File \"/Users/ekaterinasimakova/QA_automation/SellerApp/tests/e2e_tests/test_add_product_API.py\", line 40, in test_add_product_e2e\n    assert product is not None, f\"Product with SKU {expected_sku} not found in store\"\n"}, "steps": [{"name": "Get product by SKU from API", "status": "passed", "attachments": [{"name": "API Response", "source": "da87a5f4-21d9-4abc-9ab1-a717d9bfdf06-attachment.json", "type": "application/json"}, {"name": "API Error", "source": "ef2f3d6f-474c-42c4-a702-3ac234ccb748-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "sku", "value": "None"}], "start": 1718454904837, "stop": 1718454905624}], "attachments": [{"name": "Product Not Found", "source": "794698b2-795b-4e1a-b1c7-209608ab347c-attachment.txt", "type": "text/plain"}], "start": 1718454904837, "stop": 1718454905624}], "attachments": [{"name": "stdout", "source": "82910cbe-dfbc-4d38-9b5d-294d8fda8255-attachment.txt", "type": "text/plain"}], "start": 1718454892378, "stop": 1718454905625, "uuid": "1c1dc10d-4ed0-4a13-929c-edfa65161352", "historyId": "f6848b911e2ca9e9d40ded56cabf2330", "testCaseId": "f6848b911e2ca9e9d40ded56cabf2330", "fullName": "tests.e2e_tests.test_add_product_API.TestAddProductE2E#test_add_product_e2e", "labels": [{"name": "feature", "value": "E2E"}, {"name": "severity", "value": "Critical"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.e2e_tests"}, {"name": "suite", "value": "test_add_product_API"}, {"name": "subSuite", "value": "TestAddProductE2E"}, {"name": "host", "value": "Ekaterinas-MBP"}, {"name": "thread", "value": "52810-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.e2e_tests.test_add_product_API"}]}