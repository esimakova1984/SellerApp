{"name": "Add product and check", "status": "failed", "statusDetails": {"message": "AssertionError: Barcode is empty", "trace": "self = <test_add_product_API.TestAddProductE2E object at 0x11a3c0190>, login = <pages.login_page.LoginPage object at 0x11a41e470>\n\n    @allure.title(\"Add product and check\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.smoke\n    def test_add_product_e2e(self, login):\n        with allure.step(\"Open inventory page\"):\n            self.inventory_page.is_opened()\n    \n        with allure.step(\"Check if product is added to store\"):\n            self.inventory_page.open_product_card()\n            self.inventory_page.open_edit_card()\n>           sku = self.edit_product_card_page.get_barcode()\n\ntests/add_product_tests/e2e_tests/test_add_product_API.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.edit_product_card_page.EditProductPage object at 0x11a41d8d0>\n\n    @allure.step(\"Get product barcode (SKU) from product card\")\n    def get_barcode(self):\n        barcode_element = self.wait.until(EC.presence_of_element_located(self.BARCODE_FIELD))\n        assert barcode_element, \"Barcode element not found on product page\"\n    \n        barcode = barcode_element.get_attribute(\"value\")\n        allure.attach(barcode, name=\"Barcode Value\", attachment_type=allure.attachment_type.TEXT)\n>       assert barcode, \"Barcode is empty\"\nE       AssertionError: Barcode is empty\n\npages/edit_product_card_page.py:82: AssertionError"}, "steps": [{"name": "Open inventory page", "status": "passed", "steps": [{"name": "Page https://seller-app-stg.web.app/152/inventory is opened", "status": "passed", "start": 1721132075467, "stop": 1721132075469}], "start": 1721132075467, "stop": 1721132075469}, {"name": "Check if product is added to store", "status": "failed", "statusDetails": {"message": "AssertionError: Barcode is empty\n", "trace": "  File \"/Users/ekaterinasimakova/QA_automation/SellerApp/tests/add_product_tests/e2e_tests/test_add_product_API.py\", line 20, in test_add_product_e2e\n    sku = self.edit_product_card_page.get_barcode()\n  File \"/Users/ekaterinasimakova/QA_automation/SellerApp/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/ekaterinasimakova/QA_automation/SellerApp/pages/edit_product_card_page.py\", line 82, in get_barcode\n    assert barcode, \"Barcode is empty\"\n"}, "steps": [{"name": "Open product card", "status": "passed", "start": 1721132075469, "stop": 1721132076525}, {"name": "Open edit card", "status": "passed", "start": 1721132076525, "stop": 1721132077622}, {"name": "Get product barcode (SKU) from product card", "status": "failed", "statusDetails": {"message": "AssertionError: Barcode is empty\n", "trace": "  File \"/Users/ekaterinasimakova/QA_automation/SellerApp/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/ekaterinasimakova/QA_automation/SellerApp/pages/edit_product_card_page.py\", line 82, in get_barcode\n    assert barcode, \"Barcode is empty\"\n"}, "attachments": [{"name": "Barcode Value", "source": "9750f9c0-2c10-499e-94aa-dc25811b8132-attachment.txt", "type": "text/plain"}], "start": 1721132077622, "stop": 1721132077631}], "start": 1721132075469, "stop": 1721132077632}], "attachments": [{"name": "stdout", "source": "58d2f7c8-e588-4118-a130-23b161cebfeb-attachment.txt", "type": "text/plain"}], "start": 1721132075467, "stop": 1721132077632, "uuid": "032942c6-f2fb-46bc-b0e5-3cdc2aa0e621", "historyId": "9f051cb80f6eb710dece13a3c9b066fd", "testCaseId": "9f051cb80f6eb710dece13a3c9b066fd", "fullName": "tests.add_product_tests.e2e_tests.test_add_product_API.TestAddProductE2E#test_add_product_e2e", "labels": [{"name": "severity", "value": "Critical"}, {"name": "feature", "value": "E2E"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.add_product_tests.e2e_tests"}, {"name": "suite", "value": "test_add_product_API"}, {"name": "subSuite", "value": "TestAddProductE2E"}, {"name": "host", "value": "Ekaterinas-MacBook-Pro.local"}, {"name": "thread", "value": "12869-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.add_product_tests.e2e_tests.test_add_product_API"}]}