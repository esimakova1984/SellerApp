{"name": "Add product", "status": "failed", "statusDetails": {"message": "AssertionError: Expected product name: beautiful, Actual product name: soldier", "trace": "self = <test_add_product_page.TestAddProduct object at 0x107346f50>, login = <pages.login_page.LoginPage object at 0x1074d9480>\n\n    @allure.title(\"Add product\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.smoke\n    def test_add_product(self, login):\n        self.inventory_page.is_opened()\n        self.inventory_page.deny_webpusher_notification_if_present()\n        self.add_product_page.open_add_page()\n        self.add_product_page.enter_barcode()\n        generated_name = self.add_product_page.enter_name()\n        self.add_product_page.enter_description()\n        self.add_product_page.select_set_category(\"שתיה קלה\")\n        generated_price = self.add_product_page.enter_price()\n        self.add_product_page.enter_sale_price(generated_price)\n        self.add_product_page.click_done_button()\n>       self.inventory_page.is_added_product_saved(generated_name)\n\ntests/add_product_tests/sanity_tests/test_add_product_page.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.inventory_page.InventoryPage object at 0x1074d81f0>, name = 'beautiful'\n\n    @allure.step(\"Is added product saved\")\n    def is_added_product_saved(self, name):\n        product_name = self.wait.until(EC.presence_of_all_elements_located(self.PRODUCT_NAME_ITEM))\n>       assert product_name[\n                   0].text == name, f\"Expected product name: {name}, Actual product name: {product_name[0].text}\"\nE       AssertionError: Expected product name: beautiful, Actual product name: soldier\n\npages/inventory_page.py:106: AssertionError"}, "steps": [{"name": "Page https://seller-app-stg.web.app/152/inventory is opened", "status": "passed", "start": 1721727160237, "stop": 1721727160239}, {"name": "Deny web pusher notification if present", "status": "passed", "start": 1721727160239, "stop": 1721727175451}, {"name": "Open  add page", "status": "passed", "start": 1721727175451, "stop": 1721727175675}, {"name": "Enter unic barcode", "status": "passed", "start": 1721727175675, "stop": 1721727175709}, {"name": "Enter name", "status": "passed", "start": 1721727175709, "stop": 1721727175752}, {"name": "Enter description", "status": "passed", "start": 1721727175752, "stop": 1721727175799}, {"name": "Select Set category", "status": "passed", "parameters": [{"name": "text", "value": "'שתיה קלה'"}], "start": 1721727175799, "stop": 1721727176883}, {"name": "Enter price", "status": "passed", "start": 1721727176883, "stop": 1721727176913}, {"name": "Enter sale price", "status": "passed", "parameters": [{"name": "price", "value": "15"}], "start": 1721727176913, "stop": 1721727176943}, {"name": "Click Done button", "status": "passed", "start": 1721727176943, "stop": 1721727178007}, {"name": "Is added product saved", "status": "failed", "statusDetails": {"message": "AssertionError: Expected product name: beautiful, Actual product name: soldier\n", "trace": "  File \"/Users/ekaterinasimakova/QA_automation/SellerApp/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/ekaterinasimakova/QA_automation/SellerApp/pages/inventory_page.py\", line 106, in is_added_product_saved\n    assert product_name[\n"}, "parameters": [{"name": "name", "value": "'beautiful'"}], "start": 1721727178008, "stop": 1721727178042}], "attachments": [{"name": "stdout", "source": "77109886-3673-496c-b944-be7c704dbac4-attachment.txt", "type": "text/plain"}], "start": 1721727160237, "stop": 1721727178044, "uuid": "dcc1392a-e793-4928-ab95-0579076120f3", "historyId": "0ef2f963ee8c213b27420df6c10cf315", "testCaseId": "0ef2f963ee8c213b27420df6c10cf315", "fullName": "tests.add_product_tests.sanity_tests.test_add_product_page.TestAddProduct#test_add_product", "labels": [{"name": "severity", "value": "Critical"}, {"name": "feature", "value": "Sanity testing"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.add_product_tests.sanity_tests"}, {"name": "suite", "value": "test_add_product_page"}, {"name": "subSuite", "value": "TestAddProduct"}, {"name": "host", "value": "Ekaterinas-MacBook-Pro.local"}, {"name": "thread", "value": "37056-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.add_product_tests.sanity_tests.test_add_product_page"}]}